apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: cluster-api
    control-plane: controller-manager
    {{- with .Values.clusterApiLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: capi-controller-manager
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: cluster-api
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: cluster-api
        control-plane: controller-manager
    spec:
      containers:
        - args:
            {{- range .Values.manager.extraArgs }}
            - {{ . }}
            {{- end }}
            - --leader-elect
            - --diagnostics-address=:{{ .Values.manager.diagnosticsAddress }}
            - --insecure-diagnostics={{ .Values.manager.insecureDiagnostics }}
            - --use-deprecated-infra-machine-naming={{ .Values.manager.useDeprecatedInfraMachineNaming }}
            - --feature-gates=MachinePool={{ .Values.manager.featureGates.machinePool }},ClusterResourceSet={{ .Values.manager.featureGates.clusterResourceSet }},ClusterTopology={{ .Values.manager.featureGates.clusterTopology }},RuntimeSDK={{ .Values.manager.featureGates.runtimeSDK }},MachineSetPreflightChecks={{ .Values.manager.featureGates.machineSetPreflightChecks }}
          command:
          {{- range .Values.manager.command }}
          - {{ . }}
          {{- end }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
          image: {{ .Values.manager.image.repository }}:{{ .Values.manager.image.tag }}
          imagePullPolicy: {{ .Values.manager.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 9440
              name: healthz
              protocol: TCP
            - containerPort: 8443
              name: metrics
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsGroup: 65532
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          {{- with .Values.manager.resources }}
          resources:                            
          {{- toYaml . | nindent 12 }}                             
          {{- end }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: capi-manager
      terminationGracePeriodSeconds: 10
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      volumes:
        - name: cert
          secret:
            secretName: capi-webhook-service-cert
      {{- if .Values.priorityClassName }}              
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
